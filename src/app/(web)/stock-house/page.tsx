"use client";

import Image from "next/image";
import { useState } from "react";

const stockHouses = [
	{
		id: 1,
		name: "‡¶¨‡¶æ‡¶≤‡¶ø‡ßü‡¶æ‡¶°‡¶æ‡¶ô‡ßç‡¶ó‡ßÄ ‡¶∏‡¶¶‡¶∞ ‡¶ó‡ßÅ‡¶¶‡¶æ‡¶Æ",
		location: "‡¶¨‡¶æ‡¶≤‡¶ø‡ßü‡¶æ‡¶°‡¶æ‡¶ô‡ßç‡¶ó‡ßÄ ‡¶∏‡¶¶‡¶∞ ‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞, ‡¶¨‡¶æ‡¶≤‡¶ø‡ßü‡¶æ‡¶°‡¶æ‡¶ô‡ßç‡¶ó‡ßÄ, ‡¶†‡¶æ‡¶ï‡ßÅ‡¶∞‡¶ó‡¶æ‡¶Å‡¶ì",
		image: "/images/stockhouse/stockhouse-1.jpg",
		capacity: "‡ß≠,‡ß¶‡ß¶‡ß¶ ‡¶¨‡¶∏‡ßç‡¶§‡¶æ",
		description:
			"‡¶∏‡¶¶‡¶∞ ‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞ ‡¶∏‡¶Ç‡¶≤‡¶ó‡ßç‡¶® ‡¶è‡¶á ‡¶ó‡ßÅ‡¶¶‡¶æ‡¶Æ‡¶ü‡¶ø ‡¶∏‡ßç‡¶•‡¶æ‡¶®‡ßÄ‡¶Ø‡¶º ‡¶ï‡ßÉ‡¶∑‡¶ï‡¶¶‡ßá‡¶∞ ‡¶ß‡¶æ‡¶®, ‡¶ö‡¶æ‡¶≤ ‡¶ì ‡¶Æ‡¶∏‡¶≤‡¶æ ‡¶ú‡¶æ‡¶§‡ßÄ‡ßü ‡¶™‡¶£‡ßç‡¶Ø ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡ßÉ‡¶§ ‡¶π‡ßü‡•§ ‡¶∏‡¶π‡¶ú‡¶≤‡¶≠‡ßç‡¶Ø ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡ßç‡¶•‡¶æ ‡¶è‡¶ü‡¶ø‡¶ï‡ßá ‡¶Ü‡¶∞‡¶ì ‡¶ï‡¶æ‡¶∞‡ßç‡¶Ø‡¶ï‡¶∞ ‡¶ï‡¶∞‡ßá‡¶õ‡ßá‡•§",
		district: "‡¶†‡¶æ‡¶ï‡ßÅ‡¶∞‡¶ó‡¶æ‡¶Å‡¶ì",
	},
	{
		id: 2,
		name: "‡¶¨‡¶æ‡¶≤‡¶ø‡ßü‡¶æ‡¶°‡¶æ‡¶ô‡ßç‡¶ó‡ßÄ ‡¶∏‡ßç‡¶ü‡¶ï ‡¶π‡¶æ‡¶â‡¶∏ 2",
		location: "‡¶≤‡¶æ‡¶π‡¶ø‡ßú‡ßÄ ‡¶π‡¶æ‡¶ü, ‡¶¨‡¶æ‡¶≤‡¶ø‡ßü‡¶æ‡¶°‡¶æ‡¶ô‡ßç‡¶ó‡ßÄ, ‡¶†‡¶æ‡¶ï‡ßÅ‡¶∞‡¶ó‡¶æ‡¶Å‡¶ì",
		image: "/images/stockhouse/stockhouse-2.jpg",
		capacity: "‡ß´,‡ß´‡ß¶‡ß¶ ‡¶¨‡¶∏‡ßç‡¶§‡¶æ",
		description:
			"‡¶â‡¶®‡ßç‡¶®‡¶§ ‡¶∂‡ßÄ‡¶§‡¶æ‡¶§‡¶™ ‡¶®‡¶ø‡ßü‡¶®‡ßç‡¶§‡ßç‡¶∞‡¶ø‡¶§ ‡¶è‡¶á ‡¶ó‡ßÅ‡¶¶‡¶æ‡¶Æ‡¶ü‡¶ø ‡¶¨‡¶ø‡¶∂‡ßá‡¶∑ ‡¶ï‡¶∞‡ßá ‡¶Æ‡ßå‡¶∏‡ßÅ‡¶Æ‡¶ø ‡¶´‡¶∏‡¶≤ ‡¶ì ‡¶∏‡¶¨‡¶ú‡¶ø‡¶∞ ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡ßÉ‡¶§ ‡¶π‡ßü‡ßá ‡¶•‡¶æ‡¶ï‡ßá‡•§ ‡¶è‡¶ü‡¶ø ‡¶ï‡ßÉ‡¶∑‡¶ï ‡¶è‡¶¨‡¶Ç ‡¶™‡¶æ‡¶á‡¶ï‡¶æ‡¶∞‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶®‡¶ø‡¶∞‡¶æ‡¶™‡¶¶ ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£‡ßá‡¶∞ ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡ßü‡¶§‡¶æ ‡¶¶‡ßá‡ßü‡•§",
		district: "‡¶†‡¶æ‡¶ï‡ßÅ‡¶∞‡¶ó‡¶æ‡¶Å‡¶ì",
	},
	{
		id: 3,
		name: "‡¶≤‡¶æ‡¶π‡¶ø‡ßú‡ßÄ ‡¶π‡¶æ‡¶ü ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶ó‡ßÅ‡¶¶‡¶æ‡¶Æ",
		location: "‡¶≤‡¶æ‡¶π‡¶ø‡ßú‡ßÄ ‡¶π‡¶æ‡¶ü , ‡¶¨‡¶æ‡¶≤‡¶ø‡ßü‡¶æ‡¶°‡¶æ‡¶ô‡ßç‡¶ó‡ßÄ, ‡¶†‡¶æ‡¶ï‡ßÅ‡¶∞‡¶ó‡¶æ‡¶Å‡¶ì",
		image: "/images/stockhouse/stockhouse-3.jpg",
		capacity: "‡ß¨,‡ß¶‡ß¶‡ß¶ ‡¶¨‡¶∏‡ßç‡¶§‡¶æ",
		description:
			"‡¶è‡¶á ‡¶ó‡ßÅ‡¶¶‡¶æ‡¶Æ‡¶ü‡¶ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶Æ‡ßç‡¶™‡ßç‡¶∞‡¶∏‡¶æ‡¶∞‡¶ø‡¶§ ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ ‡¶∏‡¶Æ‡ßç‡¶™‡¶®‡ßç‡¶® ‡¶ï‡ßá‡¶®‡ßç‡¶¶‡ßç‡¶∞, ‡¶Ø‡¶æ ‡¶Ö‡¶ß‡¶ø‡¶ï ‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£ ‡¶ñ‡¶æ‡¶¶‡ßç‡¶Ø‡¶∂‡¶∏‡ßç‡¶Ø ‡¶∏‡¶û‡ßç‡¶ö‡ßü‡ßá ‡¶∏‡¶ï‡ßç‡¶∑‡¶Æ‡•§ ‡¶è‡¶ü‡¶ø ‡¶Ü‡¶∂‡ßá‡¶™‡¶æ‡¶∂‡ßá‡¶∞ ‡¶Ö‡¶û‡ßç‡¶ö‡¶≤‡ßá‡¶∞ ‡¶ï‡ßÉ‡¶∑‡¶ø‡¶™‡¶£‡ßç‡¶Ø ‡¶∏‡¶Ç‡¶ó‡ßç‡¶∞‡¶π ‡¶ì ‡¶¨‡¶ø‡¶§‡¶∞‡¶£‡ßá ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶≠‡ßÇ‡¶Æ‡¶ø‡¶ï‡¶æ ‡¶∞‡¶æ‡¶ñ‡ßá‡•§",
		district: "‡¶†‡¶æ‡¶ï‡ßÅ‡¶∞‡¶ó‡¶æ‡¶Å‡¶ì",
	},
];

export default function StockHousePage() {
	const [search, setSearch] = useState("");
	const [selectedDistrict, setSelectedDistrict] = useState("");

	const districts = [...new Set(stockHouses.map((d) => d.district))];

	const filteredHouses = stockHouses.filter((house) => {
		return (
			house.name.toLowerCase().includes(search.toLowerCase()) &&
			(selectedDistrict === "" || house.district === selectedDistrict)
		);
	});

	return (
		<div className="min-h-screen bg-gray-50 px-4 py-10">
			<div className="max-w-7xl mx-auto">
				<h1 className="text-3xl md:text-4xl font-bold text-green-700 text-center mb-6">
					‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶∏‡ßç‡¶ü‡¶ï ‡¶π‡¶æ‡¶â‡¶∏ ‡¶∏‡¶Æ‡ßÇ‡¶π
				</h1>

				{/* Search and Filter */}
				<div className="flex flex-col md:flex-row gap-4 mb-8 justify-center items-center">
					<input
						type="text"
						placeholder="‡¶∏‡ßç‡¶ü‡¶ï ‡¶π‡¶æ‡¶â‡¶∏ ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßÅ‡¶®..."
						value={search}
						onChange={(e) => setSearch(e.target.value)}
						className="w-full md:w-80 px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-green-500"
					/>
					<select
						value={selectedDistrict}
						onChange={(e) => setSelectedDistrict(e.target.value)}
						className="w-full md:w-60 px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-green-500"
					>
						<option value="">‡¶∏‡¶¨ ‡¶ú‡ßá‡¶≤‡¶æ</option>
						{districts.map((d) => (
							<option key={d} value={d}>
								{d}
							</option>
						))}
					</select>
				</div>

				{/* Stock Cards */}
				<div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
					{filteredHouses.length > 0 ? (
						filteredHouses.map((house) => (
							<div
								key={house.id}
								className="bg-white rounded-xl shadow-md hover:shadow-lg transition overflow-hidden flex flex-col"
							>
								<Image
									src={house.image}
									alt={house.name}
									width={500}
									height={300}
									className="w-full h-56 object-cover"
								/>
								<div className="p-5 flex-1 flex flex-col justify-between">
									<div>
										<h2 className="text-xl font-semibold text-green-800 mb-1">
											{house.name}
										</h2>
										<p className="text-sm text-gray-500 mb-1">
											üìç ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶®: {house.location}
										</p>
										<p className="text-sm text-gray-600 mb-2">
											üè¨ ‡¶ß‡¶æ‡¶∞‡¶£‡¶ï‡ßç‡¶∑‡¶Æ‡¶§‡¶æ: {house.capacity}
										</p>
										<p className="text-sm text-gray-700">
											{house.description}
										</p>
									</div>
									<div className="mt-4 flex justify-between">
										<button className="text-sm text-green-600 hover:underline">
											‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶® ‚Üí
										</button>
										<button className="bg-green-600 text-white text-sm px-3 py-1 rounded hover:bg-green-700 transition">
											‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
										</button>
									</div>
								</div>
							</div>
						))
					) : (
						<p className="text-center col-span-full text-gray-500">
							‡¶ï‡ßã‡¶®‡ßã ‡¶∏‡ßç‡¶ü‡¶ï ‡¶π‡¶æ‡¶â‡¶∏ ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§
						</p>
					)}
				</div>
			</div>
		</div>
	);
}
